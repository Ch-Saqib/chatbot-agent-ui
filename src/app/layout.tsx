"use client"
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { useSidebar } from "@/hooks/use-sidebar";
import { useEffect, useState } from "react";
import "./globals.css";
import { Sidebar } from "@/components/Sidebar";
import { ThemeProvider } from "@/components/providers/theme-provider";
import SessionProvider from "@/components/SessionProvider";
import { getServerSession } from "next-auth/next";
import { authOptions } from "./api/auth/[...nextauth]/route";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const sidebar = useSidebar();
  const [isHydrated, setIsHydrated] = useState(false); // Track hydration
  const session = getServerSession(authOptions);
  

  useEffect(() => {
    setIsHydrated(true); // Set hydrated after mounting
  }, []);

  const isOpen = isHydrated ? sidebar.getOpenState() : false; // Static SSR state

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="flex h-screen overflow-hidden">
          {/* Sidebar */}
          <Sidebar />

          {/* Main Content */}
          <main
            className={`flex-1 overflow-y-auto transition-all duration-300 ${
              isOpen ? "ml-72" : "ml-[90px]"
            }`}
          >
              <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <SessionProvider session={session}>{children}</SessionProvider>
            </ThemeProvider>
          </main>
        </div>
      </body>
    </html>
  );
}
